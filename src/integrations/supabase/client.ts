
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://edsvbgthdecgdyykuqcq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVkc3ZiZ3RoZGVjZ2R5eWt1cWNxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA4NTY3MTYsImV4cCI6MjA1NjQzMjcxNn0.r-F3SSFThWURFbBvpL8jabnjxe5iRyysHDDhdU33JGw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Add helper function to get user wallet by username
export const getUserWalletByUsername = async (username: string) => {
  try {
    // First get user profile by username
    const { data: profileData, error: profileError } = await supabase
      .from('profiles')
      .select('id')
      .eq('username', username)
      .single();
    
    if (profileError || !profileData) {
      console.error('Error finding user profile:', profileError);
      return null;
    }
    
    // Then get wallet by user_id
    const { data: walletData, error: walletError } = await supabase
      .from('user_wallets')
      .select('wallet_address')
      .eq('user_id', profileData.id)
      .single();
    
    if (walletError || !walletData) {
      console.error('Error finding user wallet:', walletError);
      return null;
    }
    
    return walletData.wallet_address;
  } catch (error) {
    console.error('Unexpected error in getUserWalletByUsername:', error);
    return null;
  }
};

// Add helper function to get username by wallet address
export const getUsernameByWalletAddress = async (walletAddress: string) => {
  try {
    // First get user wallet by wallet address
    const { data: walletData, error: walletError } = await supabase
      .from('user_wallets')
      .select('user_id')
      .eq('wallet_address', walletAddress)
      .single();
    
    if (walletError || !walletData) {
      console.error('Error finding user wallet:', walletError);
      return null;
    }
    
    // Then get profile by user_id
    const { data: profileData, error: profileError } = await supabase
      .from('profiles')
      .select('username')
      .eq('id', walletData.user_id)
      .single();
    
    if (profileError || !profileData) {
      console.error('Error finding user profile:', profileError);
      return null;
    }
    
    return profileData.username;
  } catch (error) {
    console.error('Unexpected error in getUsernameByWalletAddress:', error);
    return null;
  }
};
